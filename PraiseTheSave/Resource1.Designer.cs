//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PraiseTheSave {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PraiseTheSave.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS1.
        /// </summary>
        internal static string initialsDs1 {
            get {
                return ResourceManager.GetString("initialsDs1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS2.
        /// </summary>
        internal static string initialsDs2 {
            get {
                return ResourceManager.GetString("initialsDs2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DS3.
        /// </summary>
        internal static string initialsDs3 {
            get {
                return ResourceManager.GetString("initialsDs3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DSR.
        /// </summary>
        internal static string initialsDsr {
            get {
                return ResourceManager.GetString("initialsDsr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MiB.
        /// </summary>
        internal static string mebibyteUnit {
            get {
                return ResourceManager.GetString("mebibyteUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder does not exist..
        /// </summary>
        internal static string msgBackupFolderDNE {
            get {
                return ResourceManager.GetString("msgBackupFolderDNE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of these backups: {0}{1}..
        /// </summary>
        internal static string msgBackupFolderSize {
            get {
                return ResourceManager.GetString("msgBackupFolderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next backup: never (automatic backups are inactive)..
        /// </summary>
        internal static string msgBackupsInactive {
            get {
                return ResourceManager.GetString("msgBackupsInactive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found no {0} saves..
        /// </summary>
        internal static string msgFoundNoSaves {
            get {
                return ResourceManager.GetString("msgFoundNoSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found {0} saves! Total size: {1}{2}..
        /// </summary>
        internal static string msgFoundSaves {
            get {
                return ResourceManager.GetString("msgFoundSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last change: {0}..
        /// </summary>
        internal static string msgLastChange {
            get {
                return ResourceManager.GetString("msgLastChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next backup: {0} (will be skipped if files are unchanged)..
        /// </summary>
        internal static string msgNextBackup {
            get {
                return ResourceManager.GetString("msgNextBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git Gud u fucking casul. No Souls for u..
        /// </summary>
        internal static string msgNoSouls {
            get {
                return ResourceManager.GetString("msgNoSouls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WTF!.
        /// </summary>
        internal static string titleNoSouls {
            get {
                return ResourceManager.GetString("titleNoSouls", resourceCulture);
            }
        }
    }
}
